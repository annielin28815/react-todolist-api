{"ast":null,"code":"var _jsxFileName = \"D:\\\\personal\\\\sideProject\\\\react-todolist-page\\\\src\\\\pages\\\\home\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport Loading from '../../../components/Loading';\nimport MySwal from '../../../components/Swql';\nimport { setUserData, getUserData } from '../../../global/constants';\nimport { LoginApi } from '../../../global/todoApi';\nimport FormInput from './FormInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [isLoading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const fetchLogin = async user => {\n    setLoading(true);\n    const res = await LoginApi(user);\n    const data = await res.json();\n    const {\n      headers,\n      status\n    } = res;\n    const {\n      nickname,\n      error\n    } = data;\n    const authorization = headers.get('authorization');\n    setLoading(false);\n\n    if (status === 200) {\n      setUserData({\n        nickname,\n        authorization\n      });\n      navigate('/Todo');\n    } else if (status === 401) {\n      MySwal.fire({\n        toast: true,\n        position: 'top-end',\n        icon: 'error',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        title: error\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (getUserData() !== null) {\n      navigate('/Todo');\n    }\n  }, []);\n  const formInputList = [{\n    type: 'text',\n    id: 'email',\n    placeholder: '請輸入 Email',\n    verify: {\n      required: {\n        value: true,\n        message: '此欄位必填'\n      },\n      pattern: {\n        value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g,\n        message: '不符合 Email 規則'\n      }\n    },\n    labelText: 'Email'\n  }, {\n    type: 'password',\n    id: 'password',\n    placeholder: '請輸入密碼',\n    verify: {\n      required: {\n        value: true,\n        message: '此欄位必填'\n      }\n    },\n    labelText: '密碼'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formControls\",\n      onSubmit: handleSubmit(fetchLogin),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"formControls_txt\",\n        children: \"\\u6700\\u5BE6\\u7528\\u7684\\u7DDA\\u4E0A\\u4EE3\\u8FA6\\u4E8B\\u9805\\u670D\\u52D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), formInputList.map(item => /*#__PURE__*/_jsxDEV(FormInput, {\n        item: item,\n        register: register,\n        errors: errors\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"formControls_btnSubmit\",\n        type: \"submit\",\n        value: \"\\u767B\\u5165\",\n        disabled: Object.keys(errors).length > 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"formControls_btnLink\",\n        to: \"/register\",\n        children: \"\\u8A3B\\u518A\\u5E33\\u865F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 26\n    }, this) : '']\n  }, void 0, true);\n};\n\n_s(Login, \"j8CqvHnpKAP7RA6eIpNHBn5TZfU=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","NavLink","useNavigate","useForm","Loading","MySwal","setUserData","getUserData","LoginApi","FormInput","Login","isLoading","setLoading","navigate","register","handleSubmit","formState","errors","fetchLogin","user","res","data","json","headers","status","nickname","error","authorization","get","fire","toast","position","icon","showConfirmButton","timer","timerProgressBar","title","formInputList","type","id","placeholder","verify","required","value","message","pattern","labelText","map","item","Object","keys","length"],"sources":["D:/personal/sideProject/react-todolist-page/src/pages/home/components/Login.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\n\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport Loading from '../../../components/Loading';\r\nimport MySwal from '../../../components/Swql';\r\n\r\nimport { setUserData, getUserData } from '../../../global/constants';\r\n\r\nimport { LoginApi } from '../../../global/todoApi';\r\n\r\nimport FormInput from './FormInput';\r\n\r\nconst Login = () => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const fetchLogin = async (user) => {\r\n        setLoading(true);\r\n        const res = await LoginApi(user);\r\n        const data = await res.json();\r\n\r\n        const { headers, status } = res;\r\n        const { nickname, error } = data;\r\n\r\n        const authorization = headers.get('authorization');\r\n        setLoading(false);\r\n\r\n        if (status === 200) {\r\n            setUserData({\r\n                nickname,\r\n                authorization,\r\n            });\r\n\r\n            navigate('/Todo');\r\n        } else if (status === 401) {\r\n            MySwal.fire({\r\n                toast: true,\r\n                position: 'top-end',\r\n                icon: 'error',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                title: error,\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (getUserData() !== null) {\r\n            navigate('/Todo');\r\n        }\r\n    }, []);\r\n\r\n    const formInputList = [\r\n        {\r\n            type: 'text',\r\n            id: 'email',\r\n            placeholder: '請輸入 Email',\r\n            verify: {\r\n                required: { value: true, message: '此欄位必填' },\r\n                pattern: {\r\n                    value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g,\r\n                    message: '不符合 Email 規則',\r\n                },\r\n            },\r\n            labelText: 'Email',\r\n        },\r\n        {\r\n            type: 'password',\r\n            id: 'password',\r\n            placeholder: '請輸入密碼',\r\n            verify: {\r\n                required: { value: true, message: '此欄位必填' },\r\n            },\r\n            labelText: '密碼',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <form className='formControls' onSubmit={handleSubmit(fetchLogin)}>\r\n                <h2 className='formControls_txt'>最實用的線上代辦事項服務</h2>\r\n                {formInputList.map((item) => (\r\n                    <FormInput\r\n                        key={item.id}\r\n                        item={item}\r\n                        register={register}\r\n                        errors={errors}\r\n                    />\r\n                ))}\r\n                <input\r\n                    className='formControls_btnSubmit'\r\n                    type='submit'\r\n                    value='登入'\r\n                    disabled={Object.keys(errors).length > 0}\r\n                />\r\n                <NavLink className='formControls_btnLink' to='/register'>\r\n                    註冊帳號\r\n                </NavLink>\r\n            </form>\r\n            {isLoading ? <Loading /> : ''}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,2BAAzC;AAEA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAMc,QAAQ,GAAGX,WAAW,EAA5B;EAEA,MAAM;IACFY,QADE;IAEFC,YAFE;IAGFC,SAAS,EAAE;MAAEC;IAAF;EAHT,IAIFd,OAAO,EAJX;;EAMA,MAAMe,UAAU,GAAG,MAAOC,IAAP,IAAgB;IAC/BP,UAAU,CAAC,IAAD,CAAV;IACA,MAAMQ,GAAG,GAAG,MAAMZ,QAAQ,CAACW,IAAD,CAA1B;IACA,MAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;IAEA,MAAM;MAAEC,OAAF;MAAWC;IAAX,IAAsBJ,GAA5B;IACA,MAAM;MAAEK,QAAF;MAAYC;IAAZ,IAAsBL,IAA5B;IAEA,MAAMM,aAAa,GAAGJ,OAAO,CAACK,GAAR,CAAY,eAAZ,CAAtB;IACAhB,UAAU,CAAC,KAAD,CAAV;;IAEA,IAAIY,MAAM,KAAK,GAAf,EAAoB;MAChBlB,WAAW,CAAC;QACRmB,QADQ;QAERE;MAFQ,CAAD,CAAX;MAKAd,QAAQ,CAAC,OAAD,CAAR;IACH,CAPD,MAOO,IAAIW,MAAM,KAAK,GAAf,EAAoB;MACvBnB,MAAM,CAACwB,IAAP,CAAY;QACRC,KAAK,EAAE,IADC;QAERC,QAAQ,EAAE,SAFF;QAGRC,IAAI,EAAE,OAHE;QAIRC,iBAAiB,EAAE,KAJX;QAKRC,KAAK,EAAE,IALC;QAMRC,gBAAgB,EAAE,IANV;QAORC,KAAK,EAAEV;MAPC,CAAZ;IASH;EACJ,CA7BD;;EA+BA1B,SAAS,CAAC,MAAM;IACZ,IAAIO,WAAW,OAAO,IAAtB,EAA4B;MACxBM,QAAQ,CAAC,OAAD,CAAR;IACH;EACJ,CAJQ,EAIN,EAJM,CAAT;EAMA,MAAMwB,aAAa,GAAG,CAClB;IACIC,IAAI,EAAE,MADV;IAEIC,EAAE,EAAE,OAFR;IAGIC,WAAW,EAAE,WAHjB;IAIIC,MAAM,EAAE;MACJC,QAAQ,EAAE;QAAEC,KAAK,EAAE,IAAT;QAAeC,OAAO,EAAE;MAAxB,CADN;MAEJC,OAAO,EAAE;QACLF,KAAK,EAAE,mCADF;QAELC,OAAO,EAAE;MAFJ;IAFL,CAJZ;IAWIE,SAAS,EAAE;EAXf,CADkB,EAclB;IACIR,IAAI,EAAE,UADV;IAEIC,EAAE,EAAE,UAFR;IAGIC,WAAW,EAAE,OAHjB;IAIIC,MAAM,EAAE;MACJC,QAAQ,EAAE;QAAEC,KAAK,EAAE,IAAT;QAAeC,OAAO,EAAE;MAAxB;IADN,CAJZ;IAOIE,SAAS,EAAE;EAPf,CAdkB,CAAtB;EAyBA,oBACI;IAAA,wBACI;MAAM,SAAS,EAAC,cAAhB;MAA+B,QAAQ,EAAE/B,YAAY,CAACG,UAAD,CAArD;MAAA,wBACI;QAAI,SAAS,EAAC,kBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKmB,aAAa,CAACU,GAAd,CAAmBC,IAAD,iBACf,QAAC,SAAD;QAEI,IAAI,EAAEA,IAFV;QAGI,QAAQ,EAAElC,QAHd;QAII,MAAM,EAAEG;MAJZ,GACS+B,IAAI,CAACT,EADd;QAAA;QAAA;QAAA;MAAA,QADH,CAFL,eAUI;QACI,SAAS,EAAC,wBADd;QAEI,IAAI,EAAC,QAFT;QAGI,KAAK,EAAC,cAHV;QAII,QAAQ,EAAEU,MAAM,CAACC,IAAP,CAAYjC,MAAZ,EAAoBkC,MAApB,GAA6B;MAJ3C;QAAA;QAAA;QAAA;MAAA,QAVJ,eAgBI,QAAC,OAAD;QAAS,SAAS,EAAC,sBAAnB;QAA0C,EAAE,EAAC,WAA7C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAqBKxC,SAAS,gBAAG,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAH,GAAiB,EArB/B;EAAA,gBADJ;AAyBH,CAjGD;;GAAMD,K;UAEeR,W,EAMbC,O;;;KARFO,K;AAmGN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}